name: Build Android APK (Bare React Native)

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'release'
        type: choice
        options:
        - release
        - debug

jobs:
  build:
    name: Build Android APK (Bare RN)
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: mobile/package-lock.json

    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Cache Node modules
      uses: actions/cache@v3
      with:
        path: mobile/node_modules
        key: node-bare-${{ runner.os }}-${{ hashFiles('mobile/package-lock.json') }}
        restore-keys: |
          node-bare-${{ runner.os }}-

    - name: Install dependencies
      working-directory: mobile
      run: npm ci

    - name: Generate NativeWind CSS
      working-directory: mobile
      run: |
        # Create global.css if it doesn't exist
        if [ ! -f global.css ]; then
          echo "@tailwind base;" > global.css
          echo "@tailwind components;" >> global.css  
          echo "@tailwind utilities;" >> global.css
        fi
        # Generate the CSS
        npx tailwindcss -i ./global.css -o ./node_modules/.cache/nativewind/global.css --minify

    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          mobile/android/.gradle
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: gradle-bare-${{ runner.os }}-${{ hashFiles('mobile/android/**/*.gradle*', 'mobile/android/**/gradle-wrapper.properties') }}
        restore-keys: |
          gradle-bare-${{ runner.os }}-

    - name: Decode Android keystore (Release only)
      if: inputs.build_type == 'release'
      run: |
        echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > mobile/android/app/release-key.keystore

    - name: Make gradlew executable
      working-directory: mobile/android
      run: chmod +x ./gradlew

    - name: Clean previous builds
      working-directory: mobile/android
      run: ./gradlew clean

    - name: Build debug APK
      if: inputs.build_type == 'debug'
      working-directory: mobile/android
      run: |
        ./gradlew assembleDebug \
          --no-daemon \
          --stacktrace \
          -Dorg.gradle.jvmargs="-Xmx4096m -XX:MaxMetaspaceSize=512m"

    - name: Build release APK
      if: inputs.build_type == 'release'
      working-directory: mobile/android
      run: |
        ./gradlew assembleRelease \
          --no-daemon \
          --stacktrace \
          -Dorg.gradle.jvmargs="-Xmx4096m -XX:MaxMetaspaceSize=512m" \
          -PMYAPP_UPLOAD_STORE_FILE=release-key.keystore \
          -PMYAPP_UPLOAD_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }} \
          -PMYAPP_UPLOAD_STORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }} \
          -PMYAPP_UPLOAD_KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }}

    - name: Verify APK exists
      run: |
        if [ "${{ inputs.build_type }}" == "release" ]; then
          ls -la mobile/android/app/build/outputs/apk/release/
          test -f mobile/android/app/build/outputs/apk/release/app-release.apk
          APK_PATH="mobile/android/app/build/outputs/apk/release/app-release.apk"
        else
          ls -la mobile/android/app/build/outputs/apk/debug/
          test -f mobile/android/app/build/outputs/apk/debug/app-debug.apk
          APK_PATH="mobile/android/app/build/outputs/apk/debug/app-debug.apk"
        fi
        
        # Get APK size
        APK_SIZE=$(stat -c%s "$APK_PATH")
        echo "APK Size: $(($APK_SIZE / 1024 / 1024)) MB"
        echo "APK_PATH=$APK_PATH" >> $GITHUB_ENV

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: campus-eats-android-bare-${{ inputs.build_type }}-${{ github.sha }}
        path: ${{ env.APK_PATH }}
        retention-days: 30